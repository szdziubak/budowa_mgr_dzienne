/*Perspektywy:
Nie przechowują danych, przechowują zapytanie
Pozwalają na ukrycie zaawansowanego kodu pod perspektywą
Umożliwiają dostęp tylko do wybranych danych */

--CREATE OR REPLACE VIEW nazwa_perspektywy 
--AS podzapytanie

CREATE VIEW employees_view AS
select employee_id, manager_id, first_name, last_name, title from employees; 


CREATE VIEW pracownicy_departamenty AS
select department_name nazwa_departamentu, count(*) liczba_pracownikow 
from departments d inner join employees e 
on d.department_id = e.department_id 
group by department_name order by 2 desc;

create view pracownicy (nazwisko,pensja_roczna,data_zatr) --nazwy kolumn w perspektywie
as select last_name,salary*12,hire_date
from employees where salary<10000;

describe view  pracownicy;

create or replace view pracownicy (nazwisko,pensja_roczna,data_zatr) --nazwy kolumn w perspektywie
as select last_name,salary*12,hire_date
from employees where salary<12000; --modyfikacja widoku

drop view employees_view

/*
Synonimy - inne nazwy obiektów
*/
--synonimy prywatne
CREATE SYNONYM pracownicy FOR employees; 
select * from pracownicy;
DROP SYNONYM pracownicy;
select * from pracownicy;

GRANT SELECT ON employees TO PL_A909_SQL_S01;
CREATE SYNONYM pracownicy FOR PL_A909_SQL_Snn.employees; 

--synonimy dostępne dla wszystkich użytkowników - publiczne
CREATE PUBLIC SYNONYM products FOR PL_A909_SQL_S01.employees; --nie mam takich uprawnień, ale prosze mi wierzyć, to działa

/*Sekwencje
generują sekwencje liczb całkowitych. Są zazwyczaj używane do generowania wartości do klucza głównego

CREATE SEQUENCE nazwa_sekwencji
START WITH
INCEREMENT WITH
[MAXVALUE]
[MINVALUE]
*/
CREATE SEQUENCE seq_1; --start with 1, increment with 1
CREATE SEQUENCE seq_2
START WITH 100
INCREMENT BY -2
MINVALUE 10
MAXVALUE 100

select seq_2.nextval from dual;
select seq2.currval, seq_2.nextval from dual;

--użycie sekwencji w tabeli
CREATE SEQUENCE s_default_value_for_column;
CREATE TABLE test_with_sequence(
    id INTEGER CONSTRAINT test_with_sequence_pk PRIMARY KEY,
    sequence_value INTEGER DEFAULT s_default_value_for_column.NEXTVAL
)
INSERT INTO test_with_sequence (id) VALUES (1);
INSERT INTO test_with_sequence (id) VALUES (2);
INSERT INTO test_with_sequence (id) VALUES (3);
INSERT INTO test_with_sequence (id) VALUES (4);

select * from test_with_sequence;



--użycie sekwencji natywnie w create table
CREATE TABLE test_with_identity (
    id INTEGER CONSTRAINT test_with_identity_pk PRIMARY KEY,
    identity_value INTEGER GENERATED BY DEFAULT AS IDENTITY (
        START WITH 5 INCREMENT BY 2
    )
)
INSERT INTO test_with_identity (id) VALUES (1);
INSERT INTO test_with_identity (id) VALUES (2);
INSERT INTO test_with_identity (id) VALUES (3);
INSERT INTO test_with_identity (id) VALUES (4);

select * from test_with_identity